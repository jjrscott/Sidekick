#!/usr/bin/perl -CSL

# MIT License
# 
# Copyright (c) 2018 John Scott
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

use utf8;
use strict;
use Data::Dumper;
use Getopt::Long;
use FindBin;                 # locate this script
use lib $FindBin::Bin;  # use the parent directory
use fileutils;
use List::MoreUtils qw(uniq);
use JSON::PP;
use XML::Simple;
use Sort::Topological qw(toposort);

my $json = JSON::PP->new->pretty->canonical->relaxed->allow_nonref;

my $storyboardPath;
my $outputPathPrefix;

GetOptions(
	"storyboard=s", \$storyboardPath,
	"output=s", \$outputPathPrefix,
);

if (!length $storyboardPath)
{
	die "$0 -storyboard <storyboard path> -output <output file prefix>\n";
}

my $storyboardContent = read_file("UTF-8", $storyboardPath);

my ($outputFilePrefix) = $outputPathPrefix =~ m~([^/]+)$~;


my $hContent = "";
my $mContent = "";


$hContent .= "#import <Foundation/Foundation.h>\n";

$hContent .= "\n";

$mContent .= sprintf qq(#import "%s.h"\n), $outputFilePrefix;

$mContent .= "\n";


my @sequeIdentifiers = uniq $storyboardContent =~ m~<segue [^>]*?identifier="([^"]+)"~g;
my @reuseIdentifiers = uniq $storyboardContent =~ m~<tableViewCell [^>]*?reuseIdentifier="([^"]+)"~g;
my @storyboardIdentifiers = $storyboardContent =~ m~<[^>]*?storyboardIdentifier="([^"]+)"~g;

foreach my $sequeIdentifier (sort @sequeIdentifiers)
{
	$hContent .= sprintf qq(extern NSString* const %sSeque%s;\n), $outputFilePrefix, $sequeIdentifier;
	$mContent .= sprintf qq(NSString* const %sSeque%s = \@"%s";\n), $outputFilePrefix, $sequeIdentifier, $sequeIdentifier;
}

$hContent .= "\n";
$mContent .= "\n";

foreach my $reuseIdentifier (sort @reuseIdentifiers)
{
	$hContent .= sprintf qq(extern NSString* const %sReuseIdentifier%s;\n), $outputFilePrefix, $reuseIdentifier;
	$mContent .= sprintf qq(NSString* const %sReuseIdentifier%s = \@"%s";\n), $outputFilePrefix, $reuseIdentifier, $reuseIdentifier;
}

$hContent .= "\n";
$mContent .= "\n";

foreach my $identifier (sort @storyboardIdentifiers)
{
	$hContent .= sprintf qq(extern NSString* const %sStoryboardIdentifier%s;\n), $outputFilePrefix, $identifier;
	$mContent .= sprintf qq(NSString* const %sStoryboardIdentifier%s = \@"%s";\n), $outputFilePrefix, $identifier, $identifier;
}

write_file("UTF-8", $outputPathPrefix.'.h', $hContent);
write_file("UTF-8", $outputPathPrefix.'.m', $mContent);
